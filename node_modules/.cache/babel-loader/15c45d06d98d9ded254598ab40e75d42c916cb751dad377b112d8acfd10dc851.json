{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vagdevi\\\\my-ant-design-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, Input, Select, Button } from 'antd'; // Import Button component\nimport axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State variables\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [pagination, setPagination] = useState({\n    currentPage: 1,\n    pageSize: 10\n  });\n  const [filters, setFilters] = useState({\n    tags: [],\n    searchText: ''\n  });\n  const [allTags, setAllTags] = useState([]);\n\n  // Hooks for navigation and location\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Function to fetch data from the API\n  const getData = async () => {\n    setLoading(true);\n    try {\n      const {\n        search\n      } = location;\n      const queryParams = new URLSearchParams(search);\n      const currentPage = parseInt(queryParams.get('page') || 1);\n      const pageSize = parseInt(queryParams.get('pageSize') || 10);\n      const tags = queryParams.getAll('tags');\n      const searchText = queryParams.get('searchText') || '';\n      const response = await axios.get(`https://dummyjson.com/posts`);\n      const fetchedPosts = response.data.posts;\n      setPosts(fetchedPosts);\n      setPagination({\n        ...pagination,\n        currentPage,\n        pageSize\n      });\n      setFilters({\n        tags,\n        searchText\n      });\n      const uniqueTags = Array.from(new Set(fetchedPosts.flatMap(post => post.tags)));\n      setAllTags(uniqueTags);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, [location]);\n  const handleTableChange = (pagination, filters) => {\n    const newParams = new URLSearchParams({\n      page: pagination.current,\n      pageSize: pagination.pageSize,\n      ...filters\n    });\n    navigate({\n      search: newParams.toString()\n    });\n  };\n  const handleTagChange = value => {\n    setFilters({\n      ...filters,\n      tags: value\n    });\n  };\n  const handleSearchChange = e => {\n    setFilters({\n      ...filters,\n      searchText: e.target.value\n    });\n  };\n  const clearFilters = () => {\n    // Reset filter state to initial values\n    setFilters({\n      tags: [],\n      searchText: ''\n    });\n  };\n  const filteredPosts = posts.filter(post => {\n    const hasTag = filters.tags.length === 0 || filters.tags.some(tag => post.tags.includes(tag));\n    const searchTextMatch = post.body.toLowerCase().includes(filters.searchText.toLowerCase());\n    return hasTag && searchTextMatch;\n  });\n  const columns = [{\n    title: 'ID',\n    dataIndex: 'id',\n    key: 'id'\n  }, {\n    title: 'Title',\n    dataIndex: 'title',\n    key: 'title'\n  }, {\n    title: 'Body',\n    dataIndex: 'body',\n    key: 'body'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Input.Search, {\n      style: {\n        marginBottom: 16\n      },\n      placeholder: \"Search posts...\",\n      onChange: handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      mode: \"multiple\",\n      style: {\n        width: 200,\n        marginBottom: 16\n      },\n      placeholder: \"Filter by tags\",\n      onChange: handleTagChange,\n      value: filters.tags,\n      children: allTags.map(tag => /*#__PURE__*/_jsxDEV(Select.Option, {\n        value: tag,\n        children: tag\n      }, tag, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: clearFilters,\n      style: {\n        marginBottom: 16\n      },\n      children: \"Clear Filters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: filteredPosts,\n      loading: loading,\n      pagination: pagination,\n      onChange: handleTableChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"5MgkcJvHXysbGo+vBWhT5CUjgVw=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Table","Input","Select","Button","axios","useNavigate","useLocation","jsxDEV","_jsxDEV","App","_s","posts","setPosts","loading","setLoading","pagination","setPagination","currentPage","pageSize","filters","setFilters","tags","searchText","allTags","setAllTags","navigate","location","getData","search","queryParams","URLSearchParams","parseInt","get","getAll","response","fetchedPosts","data","uniqueTags","Array","from","Set","flatMap","post","error","console","handleTableChange","newParams","page","current","toString","handleTagChange","value","handleSearchChange","e","target","clearFilters","filteredPosts","filter","hasTag","length","some","tag","includes","searchTextMatch","body","toLowerCase","columns","title","dataIndex","key","children","Search","style","marginBottom","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","mode","width","map","Option","onClick","dataSource","_c","$RefreshReg$"],"sources":["C:/Users/Vagdevi/my-ant-design-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Table, Input, Select, Button } from 'antd'; // Import Button component\nimport axios from 'axios'; \nimport { useNavigate, useLocation } from 'react-router-dom';\n\nconst App = () => {\n  // State variables\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [pagination, setPagination] = useState({\n    currentPage: 1,\n    pageSize: 10,\n  });\n  const [filters, setFilters] = useState({\n    tags: [],\n    searchText: '',\n  });\n  const [allTags, setAllTags] = useState([]);\n\n  // Hooks for navigation and location\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Function to fetch data from the API\n  const getData = async () => {\n    setLoading(true);\n    try {\n      const { search } = location;\n      const queryParams = new URLSearchParams(search);\n      const currentPage = parseInt(queryParams.get('page') || 1);\n      const pageSize = parseInt(queryParams.get('pageSize') || 10);\n      const tags = queryParams.getAll('tags');\n      const searchText = queryParams.get('searchText') || '';\n\n      const response = await axios.get(`https://dummyjson.com/posts`);\n      const fetchedPosts = response.data.posts;\n      setPosts(fetchedPosts);\n      setPagination({ ...pagination, currentPage, pageSize });\n      setFilters({ tags, searchText });\n\n      const uniqueTags = Array.from(new Set(fetchedPosts.flatMap(post => post.tags)));\n      setAllTags(uniqueTags);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [location]);\n\n  const handleTableChange = (pagination, filters) => {\n    const newParams = new URLSearchParams({\n      page: pagination.current,\n      pageSize: pagination.pageSize,\n      ...filters,\n    });\n    navigate({ search: newParams.toString() });\n  };\n\n  const handleTagChange = (value) => {\n    setFilters({ ...filters, tags: value });\n  };\n\n  const handleSearchChange = (e) => {\n    setFilters({ ...filters, searchText: e.target.value });\n  };\n\n  const clearFilters = () => {\n    // Reset filter state to initial values\n    setFilters({ tags: [], searchText: '' });\n  };\n\n  const filteredPosts = posts.filter((post) => {\n    const hasTag = filters.tags.length === 0 || filters.tags.some((tag) => post.tags.includes(tag));\n    const searchTextMatch = post.body.toLowerCase().includes(filters.searchText.toLowerCase());\n    return hasTag && searchTextMatch;\n  });\n\n  const columns = [\n    { title: 'ID', dataIndex: 'id', key: 'id' },\n    { title: 'Title', dataIndex: 'title', key: 'title' },\n    { title: 'Body', dataIndex: 'body', key: 'body' },\n  ];\n\n  return (\n    <div>\n      <Input.Search style={{ marginBottom: 16 }} placeholder=\"Search posts...\" onChange={handleSearchChange} />\n      <Select\n        mode=\"multiple\"\n        style={{ width: 200, marginBottom: 16 }}\n        placeholder=\"Filter by tags\"\n        onChange={handleTagChange}\n        value={filters.tags}\n      >\n        {allTags.map((tag) => (\n          <Select.Option key={tag} value={tag}>\n            {tag}\n          </Select.Option>\n        ))}\n      </Select>\n      {/* Button to clear all filters */}\n      <Button onClick={clearFilters} style={{ marginBottom: 16 }}>\n        Clear Filters\n      </Button>\n      <Table columns={columns} dataSource={filteredPosts} loading={loading} pagination={pagination} onChange={handleTableChange} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}